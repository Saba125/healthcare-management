// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
enum Roles {
  Admin
  Doctor
  Patient
}

enum Gender {
  Male
  Female
}

enum Status {
  Pending
  Confirmed
  Canceled
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  role               Roles     @default(Patient)
  password           String
  isVerified         Boolean   @default(false)
  verificationCode   String?
  codeExpirationDate DateTime?
  createdAt          DateTime  @default(now())

  @@map("users")
}

model Patient {
  id             Int            @id @default(autoincrement())
  name           String
  age            Int
  gender         Gender
  medicalHistory String
  allergies      String[]
  medications    String[]
  contactInfo    Json
  Appointment    Appointment[]
  Prescription   Prescription[]

  @@map("patients")
}

model Doctor {
  id                Int            @id @default(autoincrement())
  specialization    String
  yearsOfExperience Int
  availableSlots    DateTime[]
  contactInfo       Json
  Appointment       Appointment[]
  Prescription      Prescription[]

  @@map("doctors")
}

model Appointment {
  id        Int      @id @default(autoincrement())
  status    Status   @default(Pending)
  patientId Int
  doctorId  Int
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patient   Patient  @relation(fields: [patientId], references: [id])
  date      DateTime

  @@map("appointments")
}

model Prescription {
  id            Int      @id @default(autoincrement())
  diagnosis     String
  treatment     String
  prescriptions String[]
  patientId     Int
  patient       Patient  @relation(fields: [patientId], references: [id])
  doctorId      Int
  doctor        Doctor   @relation(fields: [doctorId], references: [id])
  date          DateTime @default(now())

  @@map("prescriptions")
}
